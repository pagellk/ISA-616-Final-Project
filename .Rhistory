# Find the first term for each student
first_terms <- df |>
dplyr::arrange(term_code) |>
dplyr::group_by(student_id) |>
dplyr::slice(1) |>
dplyr::ungroup()
is_major_crhr = read_excel("IS Major Students - Credit Hours.xlsx")
is_major_crhr = is_major_crhr %>% fill(c(`Student ID`),.direction="down")
paste("The number of unique students is ",length(unique(is_major_crhr$`Student ID`)))
test=is_major_crhr %>%
filter(is.na('Term UG Crs GPA'))
# Find the first term for each student
first_terms <- df |>
dplyr::arrange('Term Code') |>
dplyr::group_by('Student ID') |>
dplyr::slice(1) |>
dplyr::ungroup()
is_major_crhr = read_excel("IS Major Students - Credit Hours.xlsx")
is_major_crhr = is_major_crhr %>% fill(c(`Student ID`),.direction="down")
paste("The number of unique students is ",length(unique(is_major_crhr$`Student ID`)))
test=is_major_crhr %>%
filter(is.na('Term UG Crs GPA'))
# Find the first term for each student
first_terms <- df |>
dplyr::arrange(`Term Code`) |>
dplyr::group_by(`Student ID`) |>
dplyr::slice(1) |>
dplyr::ungroup()
is_major_crhr = read_excel("IS Major Students - Credit Hours.xlsx")
is_major_crhr = is_major_crhr %>% fill(c(`Student ID`),.direction="down")
paste("The number of unique students is ",length(unique(is_major_crhr$`Student ID`)))
test=is_major_crhr %>%
filter(is.na('Term UG Crs GPA'))
# Find the first term for each student
first_terms <- is_major_crhr |>
dplyr::arrange(`Term Code`) |>
dplyr::group_by(`Student ID`) |>
dplyr::slice(1) |>
dplyr::ungroup()
# Count students whose first term is 202510
count_202510 <- first_terms |>
dplyr::filter(`Term Code` == 202510) |>
dplyr::count()
print(paste("Number of students with first term code 202510:", count_202510$n))
head(is_major_crhr)
is_major_crhr = read_excel("IS Major Students - Credit Hours.xlsx")
is_major_crhr = is_major_crhr %>% fill(c(`Student ID`),.direction="down")
paste("The number of unique students is ",length(unique(is_major_crhr$`Student ID`)))
test=is_major_crhr %>%
filter(is.na('Term UG Crs GPA'))
# Find the first term for each student
first_terms <- is_major_crhr |>
dplyr::arrange(`Term Code`) |>
dplyr::group_by(`Student ID`) |>
dplyr::slice(1) |>
dplyr::ungroup()
# Count students whose first term is 202510
count_202510 <- first_terms |>
dplyr::filter(`Term Code` == 202410) |>
dplyr::count()
print(paste("Number of students with first term code 202510:", count_202510$n))
head(is_major_crhr)
is_major_crhr = read_excel("IS Major Students - Credit Hours.xlsx")
is_major_crhr = is_major_crhr %>% fill(c(`Student ID`),.direction="down")
paste("The number of unique students is ",length(unique(is_major_crhr$`Student ID`)))
head(is_major_crhr)
# Read data
IS_Grades=read_excel("IS Major Students - Grades - updated.xlsx")
# Read data
IS_Grades=read_excel("IS Major Students - Grades -updated.xlsx")
# Fill in the blank cells created from the format of the data
IS_Grades = IS_Grades %>%
fill(c(`Student ID`),.direction="down")
head(IS_Grades)
tail(IS_Grades)
paste("The number of unique students is ",length(unique(IS_Grades$`Student ID`)))
num_fresh=IS_Majors %>%
filter(`Cohort Term`=="202410")%>%
nrow()
# Read data
IS_Grades=read_excel("IS Major Students - Grades -updated.xlsx")
# Fill in the blank cells created from the format of the data
IS_Grades = IS_Grades %>%
fill(c(`Student ID`),.direction="down")
head(IS_Grades)
tail(IS_Grades)
paste("The number of unique students is ",length(unique(IS_Grades$`Student ID`)))
write.csv(IS_Grades,"data-clean/Grades.csv")
# Read data
BA_Grades=read_excel("BA Major Students - Grades-updated.xlsx")
# Read data
BA_Grades=read_excel("BA Major Students - Grades -updated.xlsx")
# Fill in the blank cells created from the format of the data
BA_Grades = BA_Grades %>%
fill(c(`Student ID`),.direction="down")
head(BA_Grades)
tail(BA_Grades)
paste("The number of unique students is ",length(unique(BA_Grades$`Student ID`)))
num_fresh=BA_Majors %>%
filter(`Cohort Term`=="202410")%>%
nrow()
# Read data
BA_Grades=read_excel("BA Major Students - Grades -updated.xlsx")
# Fill in the blank cells created from the format of the data
BA_Grades = BA_Grades %>%
fill(c(`Student ID`),.direction="down")
head(BA_Grades)
tail(BA_Grades)
paste("The number of unique students is ",length(unique(BA_Grades$`Student ID`)))
write.csv(BA_Grades,"data-clean/BA_Grades.csv")
ba_major_crhr = read_excel("BA Major Students - Credit Hours.xlsx")
ba_major_crhr = ba_major_crhr %>% fill(c(`Student ID`),.direction="down")
paste("The number of unique students is ",length(unique(ba_major_crhr$`Student ID`)))
head(ba_major_crhr)
ba_major_degrees_awarded = read_excel('BA Major Students - Degrees Awarded.xlsx')
head(ba_major_degrees_awarded)
ba_major_degrees_awarded = read_excel('BA Major Students - Degrees Awarded.xlsx')
ba_major_degrees_awarded = ba_major_degrees_awarded %>%
fill(c(`Student ID`:`Term Code`:
`Degree Type`: `Degree`),.direction="down")
head(ba_major_degrees_awarded)
View(ba_major_final)
View(BA_Majors)
knitr::opts_chunk$set(echo = TRUE,message=FALSE,warning=FALSE, out.width = "100%")
#package initialization
rm(list = ls()) # clear global environment
graphics.off() # close all graphics
if(require(pacman)==FALSE) install.packages("pacman")
pacman::p_load(DataExplorer, # For explorer and cleaning data by visualizing missing values.
httr, # For downloading the data from the UCI
tidyverse, # For data manipulation
corrplot, # for heatmaps
DataExplorer, #for exploring data
skimr, # for nice summary of data
readxl, #to read Excel files
networkD3 # to create a Sankey Plot
) # For creating dummy variables of categorical variables automatically.)
# Read data
BA_Majors=read_excel("BA Major Students - Majors.xlsx")
# Fill in the blank cells created from the format of the data
BA_Majors=BA_Majors %>%
fill(c(`Student ID`:`Term Code`),.direction="down")
#Create a separate column for each major.  Unit of analysis here is student by Term Code
BA_Majors=BA_Majors %>%
group_by(`Student ID`,`Term Code`) %>%
mutate(Major_Number=paste("Major",row_number())) %>%
pivot_wider(names_from=Major_Number, values_from=`BA Major`)
# Set the Cohort Term to the smallest observed value for a given student.
BA_Majors=BA_Majors %>%
group_by(`Student ID`) %>%
mutate(`Cohort Term`=min(`Cohort Term`))
head(BA_Majors)
paste("The number of rows is ",nrow(BA_Majors))
paste("The number of unique students is ",length(unique((BA_Majors$`Student ID`))))
BA_Majors$`Major 4` = NULL
BA_Majors$`Major 5` = NULL
BA_Majors$`Major 6` = NULL
head(BA_Majors)
write.csv(BA_Majors,"data-clean/BA_Majors.csv")
# Read data
IS_Majors=read_excel("IS Major Students - Majors.xlsx")
# Fill in the blank cells created from the format of the data
IS_Majors=IS_Majors %>%
fill(c(`Student ID`:`Term Code`),.direction="down")
colnames(IS_Majors)
#Create a separate column for each major.  Unit of analysis here is student by Term Code
IS_Majors=IS_Majors %>%
group_by(`Student ID`,`Term Code`) %>%
mutate(Major_Number=paste("Major",row_number())) %>%
pivot_wider(names_from=Major_Number, values_from=`Major`)
# Set the Cohort Term to the smallest observed value for a given student.
IS_Majors=IS_Majors %>%
group_by(`Student ID`) %>%
mutate(`Cohort Term`=min(`Cohort Term`))
head(IS_Majors)
paste("The number of rows is ",nrow(IS_Majors))
paste("The number of unique students is ",length(unique((IS_Majors$`Student ID`))))
IS_Majors$`Major 4` = NULL
IS_Majors$`Major 5` = NULL
IS_Majors$`Major 6` = NULL
head(IS_Majors)
write.csv(IS_Majors,"data-clean/IS_Majors.csv")
View(IS_Majors)
knitr::opts_chunk$set(echo = TRUE,message=FALSE,warning=FALSE, out.width = "100%")
#package initialization
rm(list = ls()) # clear global environment
graphics.off() # close all graphics
if(require(pacman)==FALSE) install.packages("pacman")
pacman::p_load(DataExplorer, # For explorer and cleaning data by visualizing missing values.
httr, # For downloading the data from the UCI
tidyverse, # For data manipulation
corrplot, # for heatmaps
DataExplorer, #for exploring data
skimr, # for nice summary of data
readxl, #to read Excel files
networkD3 # to create a Sankey Plot
) # For creating dummy variables of categorical variables automatically.)
is_major_degrees_awarded = read_excel('IS Major Students - Degrees Awarded (1).xlsx')
is_major_degrees_awarded = is_major_degrees_awarded %>%
fill(c(`Student ID`:`Term Code`:
`Degree Type`: `Degree`),.direction="down")
head(is_major_degrees_awarded)
is_major_degrees_awarded = read_excel('IS Major Students - Degrees Awarded (1).xlsx')
is_major_degrees_awarded = is_major_degrees_awarded %>%
fill(c(`Student ID`:`Term Code`:
`Degree Type`: `Degree`),.direction="down")
head(is_major_degrees_awarded)
# Create a new column for the row number to separate degrees
is_major_degrees_awarded <- is_major_degrees_awarded %>%
group_by(`Student ID`) %>%
mutate(degree_number = row_number()) %>%
ungroup()
# Pivot wider to spread the major into multiple columns
is_major_degrees_awarded_wide <- is_major_degrees_awarded %>%
pivot_wider(names_from = degree_number,
values_from = Major,
names_prefix = "Major_")
# View the resulting data
head(is_major_degrees_awarded_wide)
is_major_degrees_awarded = read_excel('IS Major Students - Degrees Awarded (1).xlsx')
is_major_degrees_awarded = is_major_degrees_awarded %>%
fill(c(`Student ID`:`Term Code`:
`Degree Type`: `Degree`),.direction="down")
head(is_major_degrees_awarded)
# Create a new column for the row number to separate degrees
is_major_degrees_awarded <- is_major_degrees_awarded %>%
group_by(`Student ID`) %>%
mutate(degree_number = row_number()) %>%
ungroup()
# Create a new column for degree number to distinguish multiple degrees for the same student
is_major_degrees_awarded <- is_major_degrees_awarded %>%
group_by(`Student ID`) %>%
mutate(degree_number = row_number()) %>%
ungroup()
# Pivot wider: Create separate columns for each major
is_major_degrees_awarded_wide <- is_major_degrees_awarded %>%
pivot_wider(names_from = degree_number,
values_from = Major,
names_prefix = "Major_") %>%
# Ensure all relevant columns are kept on the same row for each student
select(`Student ID`, `Term Code`, `Degree Type`, `Degree`, starts_with("Major"))
# View the resulting data
head(is_major_degrees_awarded_wide)
is_major_degrees_awarded = read_excel('IS Major Students - Degrees Awarded (1).xlsx')
is_major_degrees_awarded = is_major_degrees_awarded %>%
fill(c(`Student ID`:`Term Code`:
`Degree Type`: `Degree`),.direction="down")
head(is_major_degrees_awarded)
# Create a new column for the row number to separate degrees
is_major_degrees_awarded <- is_major_degrees_awarded %>%
group_by(`Student ID`) %>%
mutate(degree_number = row_number()) %>%
ungroup()
#Create a separate column for each major.  Unit of analysis here is student by Term Code
IS_Majors=IS_Majors %>%
group_by(`Student ID`,`Term Code`) %>%
mutate(Major_Number=paste("Major",row_number())) %>%
pivot_wider(names_from=Major_Number, values_from=`Major`)
is_major_degrees_awarded = read_excel('IS Major Students - Degrees Awarded (1).xlsx')
is_major_degrees_awarded = is_major_degrees_awarded %>%
fill(c(`Student ID`:`Term Code`:
`Degree Type`: `Degree`),.direction="down")
head(is_major_degrees_awarded)
# Create a new column for the row number to separate degrees
is_major_degrees_awarded <- is_major_degrees_awarded %>%
group_by(`Student ID`) %>%
mutate(degree_number = row_number()) %>%
ungroup()
#Create a separate column for each major.  Unit of analysis here is student by Term Code
is_major_degrees_awarded=is_major_degrees_awarded %>%
group_by(`Student ID`,`Term Code`) %>%
mutate(Major_Number=paste("Major",row_number())) %>%
pivot_wider(names_from=Major_Number, values_from=`Major`)
is_major_degrees_awarded = read_excel('IS Major Students - Degrees Awarded (1).xlsx')
is_major_degrees_awarded = is_major_degrees_awarded %>%
fill(c(`Student ID`:`Term Code`:
`Degree Type`: `Degree`),.direction="down")
head(is_major_degrees_awarded)
# Create a new column for the row number to separate degrees
is_major_degrees_awarded <- is_major_degrees_awarded %>%
group_by(`Student ID`) %>%
mutate(degree_number = row_number()) %>%
ungroup()
#Create a separate column for each major.  Unit of analysis here is student by Term Code
is_major_degrees_awarded=is_major_degrees_awarded %>%
group_by(`Student ID`,`Term Code`) %>%
mutate(Major_Number=paste("Major",row_number())) %>%
pivot_wider(names_from=Major_Number, values_from=`Major`)
# Set the Cohort Term to the smallest observed value for a given student.
IS_Majors=IS_Majors %>%
group_by(`Term Code`) %>%
mutate(`Cohort Term`=min(`Term Code`))
is_major_degrees_awarded = read_excel('IS Major Students - Degrees Awarded (1).xlsx')
is_major_degrees_awarded = is_major_degrees_awarded %>%
fill(c(`Student ID`:`Term Code`:
`Degree Type`: `Degree`),.direction="down")
head(is_major_degrees_awarded)
# Create a new column for the row number to separate degrees
is_major_degrees_awarded <- is_major_degrees_awarded %>%
group_by(`Student ID`) %>%
mutate(degree_number = row_number()) %>%
ungroup()
#Create a separate column for each major.  Unit of analysis here is student by Term Code
is_major_degrees_awarded=is_major_degrees_awarded %>%
group_by(`Student ID`,`Term Code`) %>%
mutate(Major_Number=paste("Major",row_number())) %>%
pivot_wider(names_from=Major_Number, values_from=`Major`)
# Set the Cohort Term to the smallest observed value for a given student.
is_major_degrees_awarded=is_major_degrees_awarded %>%
group_by(`Term Code`) %>%
mutate(`Cohort Term`=min(`Term Code`))
View(is_major_degrees_awarded)
is_major_degrees_awarded = read_excel('IS Major Students - Degrees Awarded (1).xlsx')
is_major_degrees_awarded = is_major_degrees_awarded %>%
fill(c(`Student ID`:`Term Code`:
`Degree Type`: `Degree`),.direction="down")
head(is_major_degrees_awarded)
#Create a separate column for each major.  Unit of analysis here is student by Term Code
is_major_degrees_awarded=is_major_degrees_awarded %>%
group_by(`Student ID`,`Term Code`) %>%
mutate(Major_Number=paste("Major",row_number())) %>%
pivot_wider(names_from=Major_Number, values_from=`Major`)
# Set the Cohort Term to the smallest observed value for a given student.
is_major_degrees_awarded=is_major_degrees_awarded %>%
group_by(`Term Code`) %>%
mutate(`Term Code`=min(`Term Code`))
is_major_degrees_awarded = read_excel('IS Major Students - Degrees Awarded (1).xlsx')
is_major_degrees_awarded = is_major_degrees_awarded %>%
fill(c(`Student ID`:`Term Code`:
`Degree Type`: `Degree`),.direction="down")
head(is_major_degrees_awarded)
# Step 1: Create a separate column for each major (unit of analysis is student by Term Code)
is_major_degrees_awarded <- is_major_degrees_awarded %>%
group_by(`Student ID`, `Term Code`) %>%
mutate(Major_Number = paste("Major", row_number())) %>%
pivot_wider(names_from = Major_Number, values_from = `Major`)
# Step 2: Ensure each student has only one row per term with all their majors side by side
is_major_degrees_awarded <- is_major_degrees_awarded %>%
group_by(`Student ID`, `Term Code`) %>%
summarize(across(starts_with("Major"), ~ first(na.omit(.)), .names = "{.col}")) %>%
ungroup()
# Step 3: Set the Cohort Term to the smallest observed Term Code for each student
is_major_degrees_awarded <- is_major_degrees_awarded %>%
group_by(`Student ID`) %>%  # Group by Student ID to find the minimum Term Code per student
mutate(`Cohort Term` = min(`Term Code`)) %>%  # Set Cohort Term to the smallest Term Code for each student
ungroup()  # Ungroup to return to a regular data frame
# View the result
head(is_major_degrees_awarded)
View(is_major_degrees_awarded)
is_major_degrees_awarded = read_excel('IS Major Students - Degrees Awarded (1).xlsx')
is_major_degrees_awarded = is_major_degrees_awarded %>%
fill(c(`Student ID`:`Term Code`:
`Degree Type`: `Degree`),.direction="down")
head(is_major_degrees_awarded)
# Step 1: Create a separate column for each major (unit of analysis is student by Term Code)
is_major_degrees_awarded <- is_major_degrees_awarded %>%
group_by(`Student ID`, `Term Code`) %>%
mutate(Major_Number = paste("Major", row_number())) %>%
pivot_wider(names_from = Major_Number, values_from = `Major`)
# Step 2: Ensure each student has only one row per term with all their majors side by side
is_major_degrees_awarded <- is_major_degrees_awarded %>%
group_by(`Student ID`, `Term Code`) %>%
summarize(across(starts_with("Major"), ~ first(na.omit(.)), .names = "{.col}")) %>%
ungroup()
# Step 3: Set the Cohort Term to the smallest observed Term Code for each student
is_major_degrees_awarded <- is_major_degrees_awarded %>%
group_by(`Student ID`) %>%  # Group by Student ID to find the minimum Term Code per student
mutate(`Cohort Term` = min(`Term Code`)) %>%  # Set Cohort Term to the smallest Term Code for each student
ungroup()  # Ungroup to return to a regular data frame
df <- df[-211, ]
View(is_major_degrees_awarded)
is_major_degrees_awarded = read_excel('IS Major Students - Degrees Awarded (1).xlsx')
is_major_degrees_awarded = is_major_degrees_awarded %>%
fill(c(`Student ID`:`Term Code`:
`Degree Type`: `Degree`),.direction="down")
head(is_major_degrees_awarded)
# Step 1: Create a separate column for each major (unit of analysis is student by Term Code)
is_major_degrees_awarded <- is_major_degrees_awarded %>%
group_by(`Student ID`, `Term Code`) %>%
mutate(Major_Number = paste("Major", row_number())) %>%
pivot_wider(names_from = Major_Number, values_from = `Major`)
# Step 2: Ensure each student has only one row per term with all their majors side by side
is_major_degrees_awarded <- is_major_degrees_awarded %>%
group_by(`Student ID`, `Term Code`) %>%
summarize(across(starts_with("Major"), ~ first(na.omit(.)), .names = "{.col}")) %>%
ungroup()
# Step 3: Set the Cohort Term to the smallest observed Term Code for each student
is_major_degrees_awarded <- is_major_degrees_awarded %>%
group_by(`Student ID`) %>%  # Group by Student ID to find the minimum Term Code per student
mutate(`Cohort Term` = min(`Term Code`)) %>%  # Set Cohort Term to the smallest Term Code for each student
ungroup()  # Ungroup to return to a regular data frame
is_major_degrees_awarded <- is_major_degrees_awarded[-211, ]
# View the result
head(is_major_degrees_awarded)
is_major_degrees_awarded = read_excel('IS Major Students - Degrees Awarded (1).xlsx')
is_major_degrees_awarded = is_major_degrees_awarded %>%
fill(c(`Student ID`:`Term Code`:
`Degree Type`: `Degree`),.direction="down")
head(is_major_degrees_awarded)
# Step 1: Create a separate column for each major (unit of analysis is student by Term Code)
is_major_degrees_awarded <- is_major_degrees_awarded %>%
group_by(`Student ID`, `Term Code`) %>%
mutate(Major_Number = paste("Major", row_number())) %>%
pivot_wider(names_from = Major_Number, values_from = `Major`)
# Step 2: Ensure each student has only one row per term with all their majors side by side
# We'll use mutate to keep all columns, including Semesters to Degree Average
is_major_degrees_awarded <- is_major_degrees_awarded %>%
group_by(`Student ID`, `Term Code`) %>%
mutate(across(starts_with("Major"), ~ first(na.omit(.)), .names = "{.col}")) %>%
ungroup()
# Step 3: Set the Cohort Term to the smallest observed Term Code for each student
is_major_degrees_awarded <- is_major_degrees_awarded %>%
group_by(`Student ID`) %>%  # Group by Student ID to find the minimum Term Code per student
mutate(`Cohort Term` = min(`Term Code`)) %>%  # Set Cohort Term to the smallest Term Code for each student
ungroup()  # Ungroup to return to a regular data frame
is_major_degrees_awarded <- is_major_degrees_awarded[-211, ]
# View the result
head(is_major_degrees_awarded)
is_major_degrees_awarded = read_excel('IS Major Students - Degrees Awarded (1).xlsx')
is_major_degrees_awarded = is_major_degrees_awarded %>%
fill(c(`Student ID`:`Term Code`:
`Degree Type`: `Degree`),.direction="down")
head(is_major_degrees_awarded)
# Step 1: Create a separate column for each major (unit of analysis is student by Term Code)
is_major_degrees_awarded <- is_major_degrees_awarded %>%
group_by(`Student ID`, `Term Code`) %>%
mutate(Major_Number = paste("Major", row_number())) %>%
pivot_wider(names_from = Major_Number, values_from = `Major`)
# Step 2: Ensure each student has only one row per term with all their majors side by side
# We'll use mutate to keep all columns, including Semesters to Degree Average
is_major_degrees_awarded <- is_major_degrees_awarded %>%
group_by(`Student ID`, `Term Code`) %>%
mutate(across(starts_with("Major"), ~ first(na.omit(.)), .names = "{.col}")) %>%
ungroup()
# Step 3: Set the Cohort Term to the smallest observed Term Code for each student
is_major_degrees_awarded <- is_major_degrees_awarded %>%
group_by(`Student ID`) %>%  # Group by Student ID to find the minimum Term Code per student
mutate(`Cohort Term` = min(`Term Code`)) %>%  # Set Cohort Term to the smallest Term Code for each student
ungroup()  # Ungroup to return to a regular data frame
is_major_degrees_awarded <- is_major_degrees_awarded[-211, ]
is_major_degrees_awarded$`Student Division Code` = NULL
is_major_degrees_awarded$`Student Department Code` = NULL
is_major_degrees_awarded$`AW - Major Count` = NULL
is_major_degrees_awarded$`Cohort Term` = NULL
# View the result
head(is_major_degrees_awarded)
is_major_degrees_awarded = read_excel('IS Major Students - Degrees Awarded (1).xlsx')
is_major_degrees_awarded = is_major_degrees_awarded %>%
fill(c(`Student ID`:`Term Code`:
`Degree Type`: `Degree`),.direction="down")
head(is_major_degrees_awarded)
# Step 1: Create a separate column for each major (unit of analysis is student by Term Code)
is_major_degrees_awarded <- is_major_degrees_awarded %>%
group_by(`Student ID`, `Term Code`) %>%
mutate(Major_Number = paste("Major", row_number())) %>%
pivot_wider(names_from = Major_Number, values_from = `Major`)
# Step 2: Ensure each student has only one row per term with all their majors side by side
# We'll use mutate to keep all columns, including Semesters to Degree Average
is_major_degrees_awarded <- is_major_degrees_awarded %>%
group_by(`Student ID`, `Term Code`) %>%
mutate(across(starts_with("Major"), ~ first(na.omit(.)), .names = "{.col}")) %>%
ungroup()
# Step 3: Set the Cohort Term to the smallest observed Term Code for each student
is_major_degrees_awarded <- is_major_degrees_awarded %>%
group_by(`Student ID`) %>%  # Group by Student ID to find the minimum Term Code per student
mutate(`Cohort Term` = min(`Term Code`)) %>%  # Set Cohort Term to the smallest Term Code for each student
ungroup()  # Ungroup to return to a regular data frame
is_major_degrees_awarded <- is_major_degrees_awarded[-211, ]
is_major_degrees_awarded$`Student Division Code` = NULL
is_major_degrees_awarded$`Student Department Code` = NULL
is_major_degrees_awarded$`AW - Major Count` = NULL
is_major_degrees_awarded$`Cohort Term` = NULL
# View the result
head(is_major_degrees_awarded)
value_counts <- table(is_major_degrees_awarded$`Semesters to Degree Average`)
# Print the value counts
print(value_counts)
bq_major_degrees_awarded = read_excel('BA Major Students - Degrees Awarded.xlsx')
ba_major_degrees_awarded = ba_major_degrees_awarded %>%
fill(c(`Student ID`:`Term Code`:
`Degree Type`: `Degree`),.direction="down")
ba_major_degrees_awarded = read_excel('BA Major Students - Degrees Awarded.xlsx')
ba_major_degrees_awarded = ba_major_degrees_awarded %>%
fill(c(`Student ID`:`Term Code`:
`Degree Type`: `Degree`),.direction="down")
head(ba_major_degrees_awarded)
# Step 1: Create a separate column for each major (unit of analysis is student by Term Code)
ba_major_degrees_awarded <- ba_major_degrees_awarded %>%
group_by(`Student ID`, `Term Code`) %>%
mutate(Major_Number = paste("Major", row_number())) %>%
pivot_wider(names_from = Major_Number, values_from = `Major`)
# Step 2: Ensure each student has only one row per term with all their majors side by side
# We'll use mutate to keep all columns, including Semesters to Degree Average
ba_major_degrees_awarded <- ba_major_degrees_awarded %>%
group_by(`Student ID`, `Term Code`) %>%
mutate(across(starts_with("Major"), ~ first(na.omit(.)), .names = "{.col}")) %>%
ungroup()
# Step 3: Set the Cohort Term to the smallest observed Term Code for each student
ba_major_degrees_awarded <- ba_major_degrees_awarded %>%
group_by(`Student ID`) %>%  # Group by Student ID to find the minimum Term Code per student
mutate(`Cohort Term` = min(`Term Code`)) %>%  # Set Cohort Term to the smallest Term Code for each student
ungroup()  # Ungroup to return to a regular data frame
ba_major_degrees_awarded$`Student Division Code` = NULL
ba_major_degrees_awarded$`Student Department Code` = NULL
ba_major_degrees_awarded$`AW - Major Count` = NULL
ba_major_degrees_awarded$`Cohort Term` = NULL
# View the result
head(ba_major_degrees_awarded)
value_counts <- table(ba_major_degrees_awarded$`Semesters to Degree Average`)
# Print the value counts
print(value_counts)
write.csv(ba_major_degrees_awarded, "data-clean/BADegrees.csv")
